/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("document.addEventListener(\"DOMContentLoaded\", () => {\n  const findBuySellPoints = prices => {\n    let n = prices.length;\n    let buySellPoints = [];\n    let i = 0;\n    while (i < n - 1) {\n      // Find local minima as potential buy point\n      while (i < n - 1 && prices[i] >= prices[i + 1]) {\n        i++;\n      }\n      if (i === n - 1) {\n        break;\n      }\n      let buy = i;\n\n      // Find local maxima as potential sell point\n      while (i < n - 1 && prices[i] <= prices[i + 1]) {\n        i++;\n      }\n      let sell = i;\n\n      // Add buy and sell points to the result array\n      buySellPoints.push([buy, sell]);\n    }\n    return buySellPoints;\n  };\n  const handletickerSubmit = e => {\n    e.preventDefault();\n    const tickerInput = document.querySelector(\".ticker-input\");\n    const dateInput = document.querySelector(\".date-input\");\n    let stockTicker = tickerInput.value;\n    let selectedDate = dateInput.value;\n    const currentDate = new Date().toISOString().split('T')[0];\n    fetch(`http://api.marketstack.com/v1/eod?access_key=f45d23e96f5b1cceed74bcf23257fdac&symbols=${stockTicker}&date_from=${selectedDate}&date_to=${currentDate}`).then(response => response.json()).then(data => {\n      const closingPrices = data.data.map(day => day.close);\n      const maxPrice = Math.max(...closingPrices);\n      const minPrice = Math.min(...closingPrices);\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 50\n      };\n      const width = 600 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      const buySellPoints = findBuySellPoints(closingPrices);\n\n      //Build the line graph\n      const svg = d3.select('#chart-container').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n      const parseDate = d3.timeParse('%Y-%m-%d');\n      const x = d3.scaleBand().range([0, width]).padding(0.1);\n      const y = d3.scaleLinear().range([height, 0]);\n      const info = closingPrices.map((price, index) => ({\n        date: `Day ${index + 1}`,\n        price: price\n      }));\n      x.domain(info.map(d => d.date));\n      y.domain([0, d3.max(info, d => d.price)]);\n      svg.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x));\n      svg.append('g').call(d3.axisLeft(y));\n      const line = d3.line().x(d => x(d.date) + x.bandwidth() / 2) // Position the line in the middle of the band\n      .y(d => y(d.price));\n      svg.append('path').datum(info).attr('class', 'line').attr('d', line);\n      svg.selectAll('.dot').data(info).enter().append('circle').attr('class', 'dot').attr('cx', d => x(d.date) + x.bandwidth() / 2) // Position the dot in the middle of the band\n      .attr('cy', d => y(d.price)).attr('r', 5);\n      svg.selectAll('.dot').data(info).enter().append('circle').attr('class', 'dot').attr('cx', d => x(d.date) + x.bandwidth() / 2).attr('cy', d => y(d.price)).attr('r', 5).on('mouseover', function (d) {\n        // Show y-value on mouseover\n        const tooltip = d3.select('#tooltip');\n        tooltip.transition().duration(200).style('opacity', 0.9);\n        tooltip.html(`Price: ${d.price}`).style('left', d3.event.pageX + 'px') // position tooltip relative to the page\n        .style('top', d3.event.pageY - 28 + 'px'); // position tooltip slightly above the cursor\n      }).on('mouseout', function () {\n        // Hide tooltip on mouseout\n        const tooltip = d3.select('#tooltip');\n        tooltip.transition().duration(500).style('opacity', 0);\n      });\n\n      //Add circles for buy points\n      svg.selectAll('.buy-circle').data(buySellPoints).enter().append('circle').attr('class', 'buy-circle').attr('cx', d => x(`Day ${d[0] + 1}`) + x.bandwidth() / 2) // Access the correct date from info array\n      .attr('cy', d => y(closingPrices[d[0]])).attr('r', 5).style('fill', 'green').on('mouseover', function () {\n        // Show \"Buy\" tooltip on mouseover\n        // ... (tooltip logic)\n      }).on('mouseout', function () {\n        // Hide tooltip on mouseout\n        // ... (tooltip logic)\n      });\n\n      //Add circles for sell points\n      svg.selectAll('.sell-circle').data(buySellPoints).enter().append('circle').attr('class', 'sell-circle').attr('cx', d => x(`Day ${d[1] + 1}`) + x.bandwidth() / 2) // Access the correct date from info array\n      .attr('cy', d => y(closingPrices[d[1]])).attr('r', 5).style('fill', 'red').on('mouseover', function () {\n        // Show \"Sell\" tooltip on mouseover\n        // ... (tooltip logic)\n      }).on('mouseout', function () {\n        // Hide tooltip on mouseout\n        // ... (tooltip logic)\n      });\n\n      //Display max and min prices in the browser\n      const maxPriceElement = document.getElementById('max-price');\n      const minPriceElement = document.getElementById('min-price');\n      maxPriceElement.textContent = `Maximum Price: $${maxPrice}`;\n      minPriceElement.textContent = `Minimum Price: $${minPrice}`;\n\n      //Display multiple buy and sell points in the browser\n      const buySellPointsElement = document.getElementById('buy-sell-points');\n      buySellPointsElement.textContent = \"Buy and Sell Points:\\n\";\n      buySellPoints.forEach(_ref => {\n        let [buy, sell] = _ref;\n        buySellPointsElement.textContent += `Buy at Day ${buy + 1} and sell at Day ${sell + 1}\\n`;\n      });\n\n      //Calculate and display total profit\n      const profitElement = document.getElementById('profit');\n      profitElement.textContent = \"Total Profit: \";\n      let totalProfit = 0;\n      buySellPoints.forEach(_ref2 => {\n        let [buy, sell] = _ref2;\n        const buyPrice = closingPrices[buy];\n        const sellPrice = closingPrices[sell];\n        const profit = sellPrice - buyPrice;\n        totalProfit += profit;\n      });\n\n      // Append the new value\n      profitElement.textContent += `$${totalProfit.toFixed(2)}`;\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const listSubmitButton = document.querySelector(\".ticker-submit\");\n  listSubmitButton.addEventListener(\"click\", handletickerSubmit);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJuYW1lcyI6WyJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJmaW5kQnV5U2VsbFBvaW50cyIsInByaWNlcyIsIm4iLCJsZW5ndGgiLCJidXlTZWxsUG9pbnRzIiwiaSIsImJ1eSIsInNlbGwiLCJwdXNoIiwiaGFuZGxldGlja2VyU3VibWl0IiwiZSIsInByZXZlbnREZWZhdWx0IiwidGlja2VySW5wdXQiLCJxdWVyeVNlbGVjdG9yIiwiZGF0ZUlucHV0Iiwic3RvY2tUaWNrZXIiLCJ2YWx1ZSIsInNlbGVjdGVkRGF0ZSIsImN1cnJlbnREYXRlIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic3BsaXQiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJkYXRhIiwiY2xvc2luZ1ByaWNlcyIsIm1hcCIsImRheSIsImNsb3NlIiwibWF4UHJpY2UiLCJNYXRoIiwibWF4IiwibWluUHJpY2UiLCJtaW4iLCJtYXJnaW4iLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJ3aWR0aCIsImhlaWdodCIsInN2ZyIsImQzIiwic2VsZWN0IiwiYXBwZW5kIiwiYXR0ciIsInBhcnNlRGF0ZSIsInRpbWVQYXJzZSIsIngiLCJzY2FsZUJhbmQiLCJyYW5nZSIsInBhZGRpbmciLCJ5Iiwic2NhbGVMaW5lYXIiLCJpbmZvIiwicHJpY2UiLCJpbmRleCIsImRhdGUiLCJkb21haW4iLCJkIiwiY2FsbCIsImF4aXNCb3R0b20iLCJheGlzTGVmdCIsImxpbmUiLCJiYW5kd2lkdGgiLCJkYXR1bSIsInNlbGVjdEFsbCIsImVudGVyIiwib24iLCJ0b29sdGlwIiwidHJhbnNpdGlvbiIsImR1cmF0aW9uIiwic3R5bGUiLCJodG1sIiwiZXZlbnQiLCJwYWdlWCIsInBhZ2VZIiwibWF4UHJpY2VFbGVtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJtaW5QcmljZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImJ1eVNlbGxQb2ludHNFbGVtZW50IiwiZm9yRWFjaCIsIl9yZWYiLCJwcm9maXRFbGVtZW50IiwidG90YWxQcm9maXQiLCJfcmVmMiIsImJ1eVByaWNlIiwic2VsbFByaWNlIiwicHJvZml0IiwidG9GaXhlZCIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwibGlzdFN1Ym1pdEJ1dHRvbiJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RvY2stYXBwLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xyXG5cclxuICAgIGNvbnN0IGZpbmRCdXlTZWxsUG9pbnRzID0gKHByaWNlcykgPT4ge1xyXG4gICAgICAgIGxldCBuID0gcHJpY2VzLmxlbmd0aDtcclxuICAgICAgICBsZXQgYnV5U2VsbFBvaW50cyA9IFtdO1xyXG5cclxuICAgICAgICBsZXQgaSA9IDA7XHJcbiAgICAgICAgd2hpbGUgKGkgPCBuIC0gMSkge1xyXG4gICAgICAgICAgICAvLyBGaW5kIGxvY2FsIG1pbmltYSBhcyBwb3RlbnRpYWwgYnV5IHBvaW50XHJcbiAgICAgICAgICAgIHdoaWxlIChpIDwgbiAtIDEgJiYgcHJpY2VzW2ldID49IHByaWNlc1tpICsgMV0pIHtcclxuICAgICAgICAgICAgICAgIGkrKztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKGkgPT09IG4gLSAxKSB7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbGV0IGJ1eSA9IGk7XHJcblxyXG4gICAgICAgICAgICAvLyBGaW5kIGxvY2FsIG1heGltYSBhcyBwb3RlbnRpYWwgc2VsbCBwb2ludFxyXG4gICAgICAgICAgICB3aGlsZSAoaSA8IG4gLSAxICYmIHByaWNlc1tpXSA8PSBwcmljZXNbaSArIDFdKSB7XHJcbiAgICAgICAgICAgICAgICBpKys7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGxldCBzZWxsID0gaTtcclxuXHJcbiAgICAgICAgICAgIC8vIEFkZCBidXkgYW5kIHNlbGwgcG9pbnRzIHRvIHRoZSByZXN1bHQgYXJyYXlcclxuICAgICAgICAgICAgYnV5U2VsbFBvaW50cy5wdXNoKFtidXksIHNlbGxdKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBidXlTZWxsUG9pbnRzO1xyXG5cclxuXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IGhhbmRsZXRpY2tlclN1Ym1pdCA9IChlKSA9PiB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGNvbnN0IHRpY2tlcklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50aWNrZXItaW5wdXRcIik7XHJcbiAgICAgICAgY29uc3QgZGF0ZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kYXRlLWlucHV0XCIpO1xyXG4gICAgICAgIGxldCBzdG9ja1RpY2tlciA9IHRpY2tlcklucHV0LnZhbHVlO1xyXG4gICAgICAgIGxldCBzZWxlY3RlZERhdGUgPSBkYXRlSW5wdXQudmFsdWU7XHJcbiAgICAgICAgY29uc3QgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXTtcclxuXHJcbiAgICAgICAgZmV0Y2goYGh0dHA6Ly9hcGkubWFya2V0c3RhY2suY29tL3YxL2VvZD9hY2Nlc3Nfa2V5PWY0NWQyM2U5NmY1YjFjY2VlZDc0YmNmMjMyNTdmZGFjJnN5bWJvbHM9JHtzdG9ja1RpY2tlcn0mZGF0ZV9mcm9tPSR7c2VsZWN0ZWREYXRlfSZkYXRlX3RvPSR7Y3VycmVudERhdGV9YClcclxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXHJcbiAgICAgICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNsb3NpbmdQcmljZXMgPSBkYXRhLmRhdGEubWFwKGRheSA9PiBkYXkuY2xvc2UpO1xyXG4gICAgICAgICAgICBjb25zdCBtYXhQcmljZSA9IE1hdGgubWF4KC4uLmNsb3NpbmdQcmljZXMpO1xyXG4gICAgICAgICAgICBjb25zdCBtaW5QcmljZSA9IE1hdGgubWluKC4uLmNsb3NpbmdQcmljZXMpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgbWFyZ2luID0geyB0b3A6IDIwLCByaWdodDogMjAsIGJvdHRvbTogMzAsIGxlZnQ6IDUwIH07XHJcbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gNjAwIC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQ7XHJcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IDQwMCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tO1xyXG4gICAgICAgICAgICBjb25zdCBidXlTZWxsUG9pbnRzID0gZmluZEJ1eVNlbGxQb2ludHMoY2xvc2luZ1ByaWNlcyk7XHJcblxyXG4gICAgICAgICAgICAvL0J1aWxkIHRoZSBsaW5lIGdyYXBoXHJcbiAgICAgICAgICAgIGNvbnN0IHN2ZyA9IGQzLnNlbGVjdCgnI2NoYXJ0LWNvbnRhaW5lcicpXHJcbiAgICAgICAgICAgICAgICAuYXBwZW5kKCdzdmcnKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3dpZHRoJywgd2lkdGggKyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodClcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdoZWlnaHQnLCBoZWlnaHQgKyBtYXJnaW4udG9wICsgbWFyZ2luLmJvdHRvbSlcclxuICAgICAgICAgICAgICAgIC5hcHBlbmQoJ2cnKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIG1hcmdpbi5sZWZ0ICsgJywnICsgbWFyZ2luLnRvcCArICcpJyk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBwYXJzZURhdGUgPSBkMy50aW1lUGFyc2UoJyVZLSVtLSVkJyk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCB4ID0gZDMuc2NhbGVCYW5kKCkucmFuZ2UoWzAsIHdpZHRoXSkucGFkZGluZygwLjEpO1xyXG4gICAgICAgICAgICBjb25zdCB5ID0gZDMuc2NhbGVMaW5lYXIoKS5yYW5nZShbaGVpZ2h0LCAwXSk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBpbmZvID0gY2xvc2luZ1ByaWNlcy5tYXAoKHByaWNlLCBpbmRleCkgPT4gKHsgZGF0ZTogYERheSAke2luZGV4ICsgMX1gLCBwcmljZTogcHJpY2UgfSkpO1xyXG5cclxuICAgICAgICAgICAgeC5kb21haW4oaW5mby5tYXAoZCA9PiBkLmRhdGUpKTtcclxuICAgICAgICAgICAgeS5kb21haW4oWzAsIGQzLm1heChpbmZvLCBkID0+IGQucHJpY2UpXSk7XHJcblxyXG4gICAgICAgICAgICBzdmcuYXBwZW5kKCdnJylcclxuICAgICAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsJyArIGhlaWdodCArICcpJylcclxuICAgICAgICAgICAgICAgIC5jYWxsKGQzLmF4aXNCb3R0b20oeCkpO1xyXG5cclxuICAgICAgICAgICAgc3ZnLmFwcGVuZCgnZycpXHJcbiAgICAgICAgICAgICAgICAuY2FsbChkMy5heGlzTGVmdCh5KSk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBsaW5lID0gZDMubGluZSgpXHJcbiAgICAgICAgICAgICAgICAueChkID0+IHgoZC5kYXRlKSArIHguYmFuZHdpZHRoKCkgLyAyKSAvLyBQb3NpdGlvbiB0aGUgbGluZSBpbiB0aGUgbWlkZGxlIG9mIHRoZSBiYW5kXHJcbiAgICAgICAgICAgICAgICAueShkID0+IHkoZC5wcmljZSkpO1xyXG5cclxuICAgICAgICAgICAgc3ZnLmFwcGVuZCgncGF0aCcpXHJcbiAgICAgICAgICAgICAgICAuZGF0dW0oaW5mbylcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsICdsaW5lJylcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdkJywgbGluZSk7XHJcblxyXG4gICAgICAgICAgICBzdmcuc2VsZWN0QWxsKCcuZG90JylcclxuICAgICAgICAgICAgICAgIC5kYXRhKGluZm8pXHJcbiAgICAgICAgICAgICAgICAuZW50ZXIoKS5hcHBlbmQoJ2NpcmNsZScpXHJcbiAgICAgICAgICAgICAgICAuYXR0cignY2xhc3MnLCAnZG90JylcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdjeCcsIGQgPT4geChkLmRhdGUpICsgeC5iYW5kd2lkdGgoKSAvIDIpIC8vIFBvc2l0aW9uIHRoZSBkb3QgaW4gdGhlIG1pZGRsZSBvZiB0aGUgYmFuZFxyXG4gICAgICAgICAgICAgICAgLmF0dHIoJ2N5JywgZCA9PiB5KGQucHJpY2UpKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3InLCA1KTtcclxuXHJcbiAgICAgICAgICAgIHN2Zy5zZWxlY3RBbGwoJy5kb3QnKVxyXG4gICAgICAgICAgICAgICAgLmRhdGEoaW5mbylcclxuICAgICAgICAgICAgICAgIC5lbnRlcigpLmFwcGVuZCgnY2lyY2xlJylcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsICdkb3QnKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoJ2N4JywgZCA9PiB4KGQuZGF0ZSkgKyB4LmJhbmR3aWR0aCgpIC8gMilcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdjeScsIGQgPT4geShkLnByaWNlKSlcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdyJywgNSlcclxuICAgICAgICAgICAgICAgIC5vbignbW91c2VvdmVyJywgZnVuY3Rpb24oZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFNob3cgeS12YWx1ZSBvbiBtb3VzZW92ZXJcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB0b29sdGlwID0gZDMuc2VsZWN0KCcjdG9vbHRpcCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRvb2x0aXAudHJhbnNpdGlvbigpLmR1cmF0aW9uKDIwMCkuc3R5bGUoJ29wYWNpdHknLCAwLjkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRvb2x0aXAuaHRtbChgUHJpY2U6ICR7ZC5wcmljZX1gKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuc3R5bGUoJ2xlZnQnLCAoZDMuZXZlbnQucGFnZVgpICsgJ3B4JykgLy8gcG9zaXRpb24gdG9vbHRpcCByZWxhdGl2ZSB0byB0aGUgcGFnZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuc3R5bGUoJ3RvcCcsIChkMy5ldmVudC5wYWdlWSAtIDI4KSArICdweCcpOyAvLyBwb3NpdGlvbiB0b29sdGlwIHNsaWdodGx5IGFib3ZlIHRoZSBjdXJzb3JcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAub24oJ21vdXNlb3V0JywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gSGlkZSB0b29sdGlwIG9uIG1vdXNlb3V0XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9vbHRpcCA9IGQzLnNlbGVjdCgnI3Rvb2x0aXAnKTtcclxuICAgICAgICAgICAgICAgICAgICB0b29sdGlwLnRyYW5zaXRpb24oKS5kdXJhdGlvbig1MDApLnN0eWxlKCdvcGFjaXR5JywgMCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vQWRkIGNpcmNsZXMgZm9yIGJ1eSBwb2ludHNcclxuICAgICAgICAgICAgc3ZnLnNlbGVjdEFsbCgnLmJ1eS1jaXJjbGUnKVxyXG4gICAgICAgICAgICAgICAgLmRhdGEoYnV5U2VsbFBvaW50cylcclxuICAgICAgICAgICAgICAgIC5lbnRlcigpLmFwcGVuZCgnY2lyY2xlJylcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsICdidXktY2lyY2xlJylcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdjeCcsIGQgPT4geChgRGF5ICR7ZFswXSArIDF9YCkgKyB4LmJhbmR3aWR0aCgpIC8gMikgLy8gQWNjZXNzIHRoZSBjb3JyZWN0IGRhdGUgZnJvbSBpbmZvIGFycmF5XHJcbiAgICAgICAgICAgICAgICAuYXR0cignY3knLCBkID0+IHkoY2xvc2luZ1ByaWNlc1tkWzBdXSkpXHJcbiAgICAgICAgICAgICAgICAuYXR0cigncicsIDUpXHJcbiAgICAgICAgICAgICAgICAuc3R5bGUoJ2ZpbGwnLCAnZ3JlZW4nKVxyXG4gICAgICAgICAgICAgICAgLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBTaG93IFwiQnV5XCIgdG9vbHRpcCBvbiBtb3VzZW92ZXJcclxuICAgICAgICAgICAgICAgICAgICAvLyAuLi4gKHRvb2x0aXAgbG9naWMpXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIEhpZGUgdG9vbHRpcCBvbiBtb3VzZW91dFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIC4uLiAodG9vbHRpcCBsb2dpYylcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy9BZGQgY2lyY2xlcyBmb3Igc2VsbCBwb2ludHNcclxuICAgICAgICAgICAgc3ZnLnNlbGVjdEFsbCgnLnNlbGwtY2lyY2xlJylcclxuICAgICAgICAgICAgICAgIC5kYXRhKGJ1eVNlbGxQb2ludHMpXHJcbiAgICAgICAgICAgICAgICAuZW50ZXIoKS5hcHBlbmQoJ2NpcmNsZScpXHJcbiAgICAgICAgICAgICAgICAuYXR0cignY2xhc3MnLCAnc2VsbC1jaXJjbGUnKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoJ2N4JywgZCA9PiB4KGBEYXkgJHtkWzFdICsgMX1gKSArIHguYmFuZHdpZHRoKCkgLyAyKSAvLyBBY2Nlc3MgdGhlIGNvcnJlY3QgZGF0ZSBmcm9tIGluZm8gYXJyYXlcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdjeScsIGQgPT4geShjbG9zaW5nUHJpY2VzW2RbMV1dKSlcclxuICAgICAgICAgICAgICAgIC5hdHRyKCdyJywgNSlcclxuICAgICAgICAgICAgICAgIC5zdHlsZSgnZmlsbCcsICdyZWQnKVxyXG4gICAgICAgICAgICAgICAgLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBTaG93IFwiU2VsbFwiIHRvb2x0aXAgb24gbW91c2VvdmVyXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gLi4uICh0b29sdGlwIGxvZ2ljKVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5vbignbW91c2VvdXQnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBIaWRlIHRvb2x0aXAgb24gbW91c2VvdXRcclxuICAgICAgICAgICAgICAgICAgICAvLyAuLi4gKHRvb2x0aXAgbG9naWMpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vRGlzcGxheSBtYXggYW5kIG1pbiBwcmljZXMgaW4gdGhlIGJyb3dzZXJcclxuICAgICAgICAgICAgY29uc3QgbWF4UHJpY2VFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21heC1wcmljZScpO1xyXG4gICAgICAgICAgICBjb25zdCBtaW5QcmljZUVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWluLXByaWNlJyk7XHJcbiAgICAgICAgICAgIG1heFByaWNlRWxlbWVudC50ZXh0Q29udGVudCA9IGBNYXhpbXVtIFByaWNlOiAkJHttYXhQcmljZX1gO1xyXG4gICAgICAgICAgICBtaW5QcmljZUVsZW1lbnQudGV4dENvbnRlbnQgPSBgTWluaW11bSBQcmljZTogJCR7bWluUHJpY2V9YDtcclxuXHJcbiAgICAgICAgICAgIC8vRGlzcGxheSBtdWx0aXBsZSBidXkgYW5kIHNlbGwgcG9pbnRzIGluIHRoZSBicm93c2VyXHJcbiAgICAgICAgICAgIGNvbnN0IGJ1eVNlbGxQb2ludHNFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eS1zZWxsLXBvaW50cycpO1xyXG4gICAgICAgICAgICBidXlTZWxsUG9pbnRzRWxlbWVudC50ZXh0Q29udGVudCA9IFwiQnV5IGFuZCBTZWxsIFBvaW50czpcXG5cIjtcclxuICAgICAgICAgICAgYnV5U2VsbFBvaW50cy5mb3JFYWNoKChbYnV5LCBzZWxsXSkgPT4ge1xyXG4gICAgICAgICAgICBidXlTZWxsUG9pbnRzRWxlbWVudC50ZXh0Q29udGVudCArPSBgQnV5IGF0IERheSAke2J1eSArIDF9IGFuZCBzZWxsIGF0IERheSAke3NlbGwgKyAxfVxcbmA7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy9DYWxjdWxhdGUgYW5kIGRpc3BsYXkgdG90YWwgcHJvZml0XHJcbiAgICAgICAgICAgIGNvbnN0IHByb2ZpdEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvZml0Jyk7XHJcbiAgICAgICAgICAgIHByb2ZpdEVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlRvdGFsIFByb2ZpdDogXCI7XHJcbiAgICAgICAgICAgIGxldCB0b3RhbFByb2ZpdCA9IDA7XHJcbiAgICAgICAgICAgIGJ1eVNlbGxQb2ludHMuZm9yRWFjaCgoW2J1eSwgc2VsbF0pID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGJ1eVByaWNlID0gY2xvc2luZ1ByaWNlc1tidXldO1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsbFByaWNlID0gY2xvc2luZ1ByaWNlc1tzZWxsXTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHByb2ZpdCA9IHNlbGxQcmljZSAtIGJ1eVByaWNlO1xyXG4gICAgICAgICAgICAgICAgdG90YWxQcm9maXQgKz0gcHJvZml0O1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIEFwcGVuZCB0aGUgbmV3IHZhbHVlXHJcbiAgICAgICAgICAgIHByb2ZpdEVsZW1lbnQudGV4dENvbnRlbnQgKz0gYCQke3RvdGFsUHJvZml0LnRvRml4ZWQoMil9YDtcclxuXHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjonLCBlcnJvcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IGxpc3RTdWJtaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRpY2tlci1zdWJtaXRcIik7XHJcbiAgICBsaXN0U3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGV0aWNrZXJTdWJtaXQpO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNO0VBRWhELE1BQU1DLGlCQUFpQixHQUFJQyxNQUFNLElBQUs7SUFDbEMsSUFBSUMsQ0FBQyxHQUFHRCxNQUFNLENBQUNFLE1BQU07SUFDckIsSUFBSUMsYUFBYSxHQUFHLEVBQUU7SUFFdEIsSUFBSUMsQ0FBQyxHQUFHLENBQUM7SUFDVCxPQUFPQSxDQUFDLEdBQUdILENBQUMsR0FBRyxDQUFDLEVBQUU7TUFDZDtNQUNBLE9BQU9HLENBQUMsR0FBR0gsQ0FBQyxHQUFHLENBQUMsSUFBSUQsTUFBTSxDQUFDSSxDQUFDLENBQUMsSUFBSUosTUFBTSxDQUFDSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7UUFDNUNBLENBQUMsRUFBRTtNQUNQO01BRUEsSUFBSUEsQ0FBQyxLQUFLSCxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ2I7TUFDSjtNQUVBLElBQUlJLEdBQUcsR0FBR0QsQ0FBQzs7TUFFWDtNQUNBLE9BQU9BLENBQUMsR0FBR0gsQ0FBQyxHQUFHLENBQUMsSUFBSUQsTUFBTSxDQUFDSSxDQUFDLENBQUMsSUFBSUosTUFBTSxDQUFDSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7UUFDNUNBLENBQUMsRUFBRTtNQUNQO01BRUEsSUFBSUUsSUFBSSxHQUFHRixDQUFDOztNQUVaO01BQ0FELGFBQWEsQ0FBQ0ksSUFBSSxDQUFDLENBQUNGLEdBQUcsRUFBRUMsSUFBSSxDQUFDLENBQUM7SUFDbkM7SUFFQSxPQUFPSCxhQUFhO0VBR3hCLENBQUM7RUFFRCxNQUFNSyxrQkFBa0IsR0FBSUMsQ0FBQyxJQUFLO0lBQzlCQSxDQUFDLENBQUNDLGNBQWMsQ0FBQyxDQUFDO0lBQ2xCLE1BQU1DLFdBQVcsR0FBR2QsUUFBUSxDQUFDZSxhQUFhLENBQUMsZUFBZSxDQUFDO0lBQzNELE1BQU1DLFNBQVMsR0FBR2hCLFFBQVEsQ0FBQ2UsYUFBYSxDQUFDLGFBQWEsQ0FBQztJQUN2RCxJQUFJRSxXQUFXLEdBQUdILFdBQVcsQ0FBQ0ksS0FBSztJQUNuQyxJQUFJQyxZQUFZLEdBQUdILFNBQVMsQ0FBQ0UsS0FBSztJQUNsQyxNQUFNRSxXQUFXLEdBQUcsSUFBSUMsSUFBSSxDQUFDLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUUxREMsS0FBSyxDQUFFLHlGQUF3RlAsV0FBWSxjQUFhRSxZQUFhLFlBQVdDLFdBQVksRUFBQyxDQUFDLENBQzdKSyxJQUFJLENBQUNDLFFBQVEsSUFBSUEsUUFBUSxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ2pDRixJQUFJLENBQUNHLElBQUksSUFBSTtNQUNWLE1BQU1DLGFBQWEsR0FBR0QsSUFBSSxDQUFDQSxJQUFJLENBQUNFLEdBQUcsQ0FBQ0MsR0FBRyxJQUFJQSxHQUFHLENBQUNDLEtBQUssQ0FBQztNQUNyRCxNQUFNQyxRQUFRLEdBQUdDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLEdBQUdOLGFBQWEsQ0FBQztNQUMzQyxNQUFNTyxRQUFRLEdBQUdGLElBQUksQ0FBQ0csR0FBRyxDQUFDLEdBQUdSLGFBQWEsQ0FBQztNQUUzQyxNQUFNUyxNQUFNLEdBQUc7UUFBRUMsR0FBRyxFQUFFLEVBQUU7UUFBRUMsS0FBSyxFQUFFLEVBQUU7UUFBRUMsTUFBTSxFQUFFLEVBQUU7UUFBRUMsSUFBSSxFQUFFO01BQUcsQ0FBQztNQUMzRCxNQUFNQyxLQUFLLEdBQUcsR0FBRyxHQUFHTCxNQUFNLENBQUNJLElBQUksR0FBR0osTUFBTSxDQUFDRSxLQUFLO01BQzlDLE1BQU1JLE1BQU0sR0FBRyxHQUFHLEdBQUdOLE1BQU0sQ0FBQ0MsR0FBRyxHQUFHRCxNQUFNLENBQUNHLE1BQU07TUFDL0MsTUFBTW5DLGFBQWEsR0FBR0osaUJBQWlCLENBQUMyQixhQUFhLENBQUM7O01BRXREO01BQ0EsTUFBTWdCLEdBQUcsR0FBR0MsRUFBRSxDQUFDQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FDcENDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FDYkMsSUFBSSxDQUFDLE9BQU8sRUFBRU4sS0FBSyxHQUFHTCxNQUFNLENBQUNJLElBQUksR0FBR0osTUFBTSxDQUFDRSxLQUFLLENBQUMsQ0FDakRTLElBQUksQ0FBQyxRQUFRLEVBQUVMLE1BQU0sR0FBR04sTUFBTSxDQUFDQyxHQUFHLEdBQUdELE1BQU0sQ0FBQ0csTUFBTSxDQUFDLENBQ25ETyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQ1hDLElBQUksQ0FBQyxXQUFXLEVBQUUsWUFBWSxHQUFHWCxNQUFNLENBQUNJLElBQUksR0FBRyxHQUFHLEdBQUdKLE1BQU0sQ0FBQ0MsR0FBRyxHQUFHLEdBQUcsQ0FBQztNQUUzRSxNQUFNVyxTQUFTLEdBQUdKLEVBQUUsQ0FBQ0ssU0FBUyxDQUFDLFVBQVUsQ0FBQztNQUUxQyxNQUFNQyxDQUFDLEdBQUdOLEVBQUUsQ0FBQ08sU0FBUyxDQUFDLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFWCxLQUFLLENBQUMsQ0FBQyxDQUFDWSxPQUFPLENBQUMsR0FBRyxDQUFDO01BQ3ZELE1BQU1DLENBQUMsR0FBR1YsRUFBRSxDQUFDVyxXQUFXLENBQUMsQ0FBQyxDQUFDSCxLQUFLLENBQUMsQ0FBQ1YsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO01BRTdDLE1BQU1jLElBQUksR0FBRzdCLGFBQWEsQ0FBQ0MsR0FBRyxDQUFDLENBQUM2QixLQUFLLEVBQUVDLEtBQUssTUFBTTtRQUFFQyxJQUFJLEVBQUcsT0FBTUQsS0FBSyxHQUFHLENBQUUsRUFBQztRQUFFRCxLQUFLLEVBQUVBO01BQU0sQ0FBQyxDQUFDLENBQUM7TUFFOUZQLENBQUMsQ0FBQ1UsTUFBTSxDQUFDSixJQUFJLENBQUM1QixHQUFHLENBQUNpQyxDQUFDLElBQUlBLENBQUMsQ0FBQ0YsSUFBSSxDQUFDLENBQUM7TUFDL0JMLENBQUMsQ0FBQ00sTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFaEIsRUFBRSxDQUFDWCxHQUFHLENBQUN1QixJQUFJLEVBQUVLLENBQUMsSUFBSUEsQ0FBQyxDQUFDSixLQUFLLENBQUMsQ0FBQyxDQUFDO01BRXpDZCxHQUFHLENBQUNHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDVkMsSUFBSSxDQUFDLFdBQVcsRUFBRSxjQUFjLEdBQUdMLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FDaERvQixJQUFJLENBQUNsQixFQUFFLENBQUNtQixVQUFVLENBQUNiLENBQUMsQ0FBQyxDQUFDO01BRTNCUCxHQUFHLENBQUNHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDVmdCLElBQUksQ0FBQ2xCLEVBQUUsQ0FBQ29CLFFBQVEsQ0FBQ1YsQ0FBQyxDQUFDLENBQUM7TUFFekIsTUFBTVcsSUFBSSxHQUFHckIsRUFBRSxDQUFDcUIsSUFBSSxDQUFDLENBQUMsQ0FDakJmLENBQUMsQ0FBQ1csQ0FBQyxJQUFJWCxDQUFDLENBQUNXLENBQUMsQ0FBQ0YsSUFBSSxDQUFDLEdBQUdULENBQUMsQ0FBQ2dCLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7TUFBQSxDQUN0Q1osQ0FBQyxDQUFDTyxDQUFDLElBQUlQLENBQUMsQ0FBQ08sQ0FBQyxDQUFDSixLQUFLLENBQUMsQ0FBQztNQUV2QmQsR0FBRyxDQUFDRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQ2JxQixLQUFLLENBQUNYLElBQUksQ0FBQyxDQUNYVCxJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUNyQkEsSUFBSSxDQUFDLEdBQUcsRUFBRWtCLElBQUksQ0FBQztNQUVwQnRCLEdBQUcsQ0FBQ3lCLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FDaEIxQyxJQUFJLENBQUM4QixJQUFJLENBQUMsQ0FDVmEsS0FBSyxDQUFDLENBQUMsQ0FBQ3ZCLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FDeEJDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQ3BCQSxJQUFJLENBQUMsSUFBSSxFQUFFYyxDQUFDLElBQUlYLENBQUMsQ0FBQ1csQ0FBQyxDQUFDRixJQUFJLENBQUMsR0FBR1QsQ0FBQyxDQUFDZ0IsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztNQUFBLENBQy9DbkIsSUFBSSxDQUFDLElBQUksRUFBRWMsQ0FBQyxJQUFJUCxDQUFDLENBQUNPLENBQUMsQ0FBQ0osS0FBSyxDQUFDLENBQUMsQ0FDM0JWLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO01BRWpCSixHQUFHLENBQUN5QixTQUFTLENBQUMsTUFBTSxDQUFDLENBQ2hCMUMsSUFBSSxDQUFDOEIsSUFBSSxDQUFDLENBQ1ZhLEtBQUssQ0FBQyxDQUFDLENBQUN2QixNQUFNLENBQUMsUUFBUSxDQUFDLENBQ3hCQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUNwQkEsSUFBSSxDQUFDLElBQUksRUFBRWMsQ0FBQyxJQUFJWCxDQUFDLENBQUNXLENBQUMsQ0FBQ0YsSUFBSSxDQUFDLEdBQUdULENBQUMsQ0FBQ2dCLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQzlDbkIsSUFBSSxDQUFDLElBQUksRUFBRWMsQ0FBQyxJQUFJUCxDQUFDLENBQUNPLENBQUMsQ0FBQ0osS0FBSyxDQUFDLENBQUMsQ0FDM0JWLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQ1p1QixFQUFFLENBQUMsV0FBVyxFQUFFLFVBQVNULENBQUMsRUFBRTtRQUN6QjtRQUNBLE1BQU1VLE9BQU8sR0FBRzNCLEVBQUUsQ0FBQ0MsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUNyQzBCLE9BQU8sQ0FBQ0MsVUFBVSxDQUFDLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxLQUFLLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQztRQUN4REgsT0FBTyxDQUFDSSxJQUFJLENBQUUsVUFBU2QsQ0FBQyxDQUFDSixLQUFNLEVBQUMsQ0FBQyxDQUM1QmlCLEtBQUssQ0FBQyxNQUFNLEVBQUc5QixFQUFFLENBQUNnQyxLQUFLLENBQUNDLEtBQUssR0FBSSxJQUFJLENBQUMsQ0FBQztRQUFBLENBQ3ZDSCxLQUFLLENBQUMsS0FBSyxFQUFHOUIsRUFBRSxDQUFDZ0MsS0FBSyxDQUFDRSxLQUFLLEdBQUcsRUFBRSxHQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7TUFDckQsQ0FBQyxDQUFDLENBQ0RSLEVBQUUsQ0FBQyxVQUFVLEVBQUUsWUFBVztRQUN2QjtRQUNBLE1BQU1DLE9BQU8sR0FBRzNCLEVBQUUsQ0FBQ0MsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUNyQzBCLE9BQU8sQ0FBQ0MsVUFBVSxDQUFDLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztNQUMxRCxDQUFDLENBQUM7O01BRU47TUFDQS9CLEdBQUcsQ0FBQ3lCLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FDdkIxQyxJQUFJLENBQUN0QixhQUFhLENBQUMsQ0FDbkJpRSxLQUFLLENBQUMsQ0FBQyxDQUFDdkIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUN4QkMsSUFBSSxDQUFDLE9BQU8sRUFBRSxZQUFZLENBQUMsQ0FDM0JBLElBQUksQ0FBQyxJQUFJLEVBQUVjLENBQUMsSUFBSVgsQ0FBQyxDQUFFLE9BQU1XLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFFLEVBQUMsQ0FBQyxHQUFHWCxDQUFDLENBQUNnQixTQUFTLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO01BQUEsQ0FDMURuQixJQUFJLENBQUMsSUFBSSxFQUFFYyxDQUFDLElBQUlQLENBQUMsQ0FBQzNCLGFBQWEsQ0FBQ2tDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDdkNkLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQ1oyQixLQUFLLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUN0QkosRUFBRSxDQUFDLFdBQVcsRUFBRSxZQUFXO1FBQ3hCO1FBQ0E7TUFBQSxDQUNILENBQUMsQ0FDREEsRUFBRSxDQUFDLFVBQVUsRUFBRSxZQUFXO1FBQ3ZCO1FBQ0E7TUFBQSxDQUNILENBQUM7O01BRU47TUFDQTNCLEdBQUcsQ0FBQ3lCLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FDeEIxQyxJQUFJLENBQUN0QixhQUFhLENBQUMsQ0FDbkJpRSxLQUFLLENBQUMsQ0FBQyxDQUFDdkIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUN4QkMsSUFBSSxDQUFDLE9BQU8sRUFBRSxhQUFhLENBQUMsQ0FDNUJBLElBQUksQ0FBQyxJQUFJLEVBQUVjLENBQUMsSUFBSVgsQ0FBQyxDQUFFLE9BQU1XLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFFLEVBQUMsQ0FBQyxHQUFHWCxDQUFDLENBQUNnQixTQUFTLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO01BQUEsQ0FDMURuQixJQUFJLENBQUMsSUFBSSxFQUFFYyxDQUFDLElBQUlQLENBQUMsQ0FBQzNCLGFBQWEsQ0FBQ2tDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDdkNkLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQ1oyQixLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUNwQkosRUFBRSxDQUFDLFdBQVcsRUFBRSxZQUFXO1FBQ3hCO1FBQ0E7TUFBQSxDQUNILENBQUMsQ0FDREEsRUFBRSxDQUFDLFVBQVUsRUFBRSxZQUFXO1FBQ3ZCO1FBQ0E7TUFBQSxDQUNILENBQUM7O01BRU47TUFDQSxNQUFNUyxlQUFlLEdBQUdqRixRQUFRLENBQUNrRixjQUFjLENBQUMsV0FBVyxDQUFDO01BQzVELE1BQU1DLGVBQWUsR0FBR25GLFFBQVEsQ0FBQ2tGLGNBQWMsQ0FBQyxXQUFXLENBQUM7TUFDNURELGVBQWUsQ0FBQ0csV0FBVyxHQUFJLG1CQUFrQm5ELFFBQVMsRUFBQztNQUMzRGtELGVBQWUsQ0FBQ0MsV0FBVyxHQUFJLG1CQUFrQmhELFFBQVMsRUFBQzs7TUFFM0Q7TUFDQSxNQUFNaUQsb0JBQW9CLEdBQUdyRixRQUFRLENBQUNrRixjQUFjLENBQUMsaUJBQWlCLENBQUM7TUFDdkVHLG9CQUFvQixDQUFDRCxXQUFXLEdBQUcsd0JBQXdCO01BQzNEOUUsYUFBYSxDQUFDZ0YsT0FBTyxDQUFDQyxJQUFBLElBQWlCO1FBQUEsSUFBaEIsQ0FBQy9FLEdBQUcsRUFBRUMsSUFBSSxDQUFDLEdBQUE4RSxJQUFBO1FBQ2xDRixvQkFBb0IsQ0FBQ0QsV0FBVyxJQUFLLGNBQWE1RSxHQUFHLEdBQUcsQ0FBRSxvQkFBbUJDLElBQUksR0FBRyxDQUFFLElBQUc7TUFDekYsQ0FBQyxDQUFDOztNQUVGO01BQ0EsTUFBTStFLGFBQWEsR0FBR3hGLFFBQVEsQ0FBQ2tGLGNBQWMsQ0FBQyxRQUFRLENBQUM7TUFDdkRNLGFBQWEsQ0FBQ0osV0FBVyxHQUFHLGdCQUFnQjtNQUM1QyxJQUFJSyxXQUFXLEdBQUcsQ0FBQztNQUNuQm5GLGFBQWEsQ0FBQ2dGLE9BQU8sQ0FBQ0ksS0FBQSxJQUFpQjtRQUFBLElBQWhCLENBQUNsRixHQUFHLEVBQUVDLElBQUksQ0FBQyxHQUFBaUYsS0FBQTtRQUM5QixNQUFNQyxRQUFRLEdBQUc5RCxhQUFhLENBQUNyQixHQUFHLENBQUM7UUFDbkMsTUFBTW9GLFNBQVMsR0FBRy9ELGFBQWEsQ0FBQ3BCLElBQUksQ0FBQztRQUNyQyxNQUFNb0YsTUFBTSxHQUFHRCxTQUFTLEdBQUdELFFBQVE7UUFDbkNGLFdBQVcsSUFBSUksTUFBTTtNQUN6QixDQUFDLENBQUM7O01BRUY7TUFDQUwsYUFBYSxDQUFDSixXQUFXLElBQUssSUFBR0ssV0FBVyxDQUFDSyxPQUFPLENBQUMsQ0FBQyxDQUFFLEVBQUM7SUFFN0QsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQ0MsS0FBSyxJQUFJO01BQ1pDLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDLFFBQVEsRUFBRUEsS0FBSyxDQUFDO0lBQ2xDLENBQUMsQ0FBQztFQUNOLENBQUM7RUFFRCxNQUFNRSxnQkFBZ0IsR0FBR2xHLFFBQVEsQ0FBQ2UsYUFBYSxDQUFDLGdCQUFnQixDQUFDO0VBQ2pFbUYsZ0JBQWdCLENBQUNqRyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUVVLGtCQUFrQixDQUFDO0FBQ2xFLENBQUMsQ0FBQyJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9jay1hcHAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;